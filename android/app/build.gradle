def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"


android {
    compileSdkVersion 31

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "flutter.watchlist"
        minSdkVersion 21
        targetSdkVersion 31
        //versionCode System.getenv('APPCENTER_BUILD_ID').toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true // Add this line
    }

    // signingConfigs {
    //     release {
    //         storeFile rootProject.file("app/keystore.jks")
    //         storePassword System.getenv("APPCENTER_KEYSTORE_PASSWORD")
    //         keyAlias System.getenv("APPCENTER_KEY_ALIAS")
    //         keyPassword System.getenv("APPCENTER_KEY_PASSWORD")
    //     }
    // }


    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            //signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation 'androidx.multidex:multidex:2.0.0' // Add this line
    implementation 'com.google.firebase:firebase-firestore:21.2.1'
    implementation 'com.google.firebase:firebase-auth:19.1.0'
    //def appCenterSdkVersion = '4.1.0'
    //implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    //implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"
}

apply plugin: 'com.google.gms.google-services' 